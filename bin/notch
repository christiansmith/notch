#!/usr/bin/env node


/**
 * Module dependecies.
 */

var notch = require('../index.js')
  , path = require('path')
  , fs = require('fs');

/**
 * Notch Version
 */

var version = '0.0.0';

/**
 * Notch Help
 */

var help = 'RTFS';

/**
 * Argument Aliases
 */

var aliases = { 
  '-h': 'help',
  '--help': 'help',
  '-v': 'version',
  '--version': 'version'
};


/**
 * Get args and replace aliases
 */

var args = process.argv.slice(2).map(function (arg) {
  return aliases[arg] || arg;
});

/**
 * The first arg is a  Notch command 
 */

var command = args.shift();

switch (command) {
  case 'version':
    console.log(version);
    process.exit(1);
    break;

  case 'help':
    console.log(help);
    process.exit(1);
    break;

  case 'init':
    var env = new notch.Env()
      , client = new notch.Client(env);

    client.init.apply(client, args);
    break;

  default:
    var env = new notch.Env('config.json')
      , client = new notch.Client(env);
    client[command].apply(client, args);
    break;
}


/**
  case 'draft':
    // ask user to use defaults? 
    // if no, go through defaults/required and get values from prompt
    var file = args.shift()
      , schema = { properties: { foo: { type: 'string', default: 'bar' }}}
      , doc = notch.Doc.spawn(schema);
      doc.write(file);
    break;

*/
